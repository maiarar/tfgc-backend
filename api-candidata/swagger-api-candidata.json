{
  "swagger": "2.0",
  "info": {
    "description": "Esse Swagger é para o projeto de backend desenvolvido no evento [Tech For Girls chalenge](http://tfgc.com.br). Nele está a definição da API de `candidatas`.",
    "version": "0.0.1",
    "title": "API de Candidatas",
    "termsOfService": "https://github.com/maiarar/tfgc-backend/tree/master/api-candidata"
  },
  "host": "??????",
  "basePath": "/v1",
  "tags": [
    {
      "name": "candidatas",
      "description": "Qualquer tipo de candidata"
    },
    {
      "name": "feedbacks",
      "description": "Feedbacks (positivos e negativos) que uma candidata recebe de recrutadores"
    }
  ],
  "schemes": [
    "https"
  ],
  "parameters": {
    "client_id": {
      "name": "client_id",
      "in": "header",
      "description": "Client ID provido na criação do app",
      "type": "string",
      "required": true
    },
    "_offset": {
      "in": "query",
      "description": "Registro inicial a ser retornado",
      "name": "_offset",
      "type": "integer",
      "required": true
    },
    "_limit": {
      "in": "query",
      "description": "Quantidade limite de registros retornados",
      "name": "_limit",
      "type": "integer",
      "required": true
    },
    "searchString": {
      "in": "query",
      "name": "searchString",
      "description": "String de busca a ser utilizada para filtrar as candidatas",
      "required": false,
      "type": "string"
    },
    "id": {
      "in": "path",
      "name": "id",
      "description": "Id da candidata",
      "type": "string",
      "required": true
    }
  },
  "paths": {
    "/candidatas": {
      "post": {
        "tags": [
          "candidatas"
        ],
        "summary": "Salva as informações de um candidata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto candidata a ser salvo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Candidata"
            }
          },
          {
            "$ref": "#/parameters/client_id"
          }
        ],
        "responses": {
          "201": {
            "description": "Candidata criada"
          },
          "401": {
            "description": "Erro na validação do client_id"
          },
          "412": {
            "description": "Um dos campos não foi preenchido corretamente"
          }
        }
      },
      "get": {
        "tags": [
          "candidatas"
        ],
        "summary": "Retorna todas as candidatas na base",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/client_id"
          },
          {
            "$ref": "#/parameters/_offset"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/searchString"
          }
        ],
        "responses": {
          "200": {
            "description": "Candidata foi retornada corretamente",
            "schema": {
              "$ref": "#/definitions/CandidataRetorno"
            }
          },
          "401": {
            "description": "Erro na validação do client_id"
          }
        }
      }
    },
    "/candidatas/{id}": {
      "get": {
        "tags": [
          "candidatas"
        ],
        "summary": "Retorna uma candidata existente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/client_id"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Candidata foi retornado corretamente",
            "schema": {
              "$ref": "#/definitions/Candidata"
            }
          },
          "401": {
            "description": "Erro na validação do client_id"
          },
          "404": {
            "description": "Candidata não encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "candidatas"
        ],
        "summary": "Atualiza um candidata existente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto candidata a ser atualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Candidata"
            }
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Atualização realizada com sucesso"
          },
          "401": {
            "description": "Erro na validação do client_id"
          },
          "404": {
            "description": "Candidata não encontrada"
          },
          "412": {
            "description": "Um dos campos não foi preenchido corretamente"
          }
        }
      }
    },
    "/candidatas/{id}/feedbacks": {
      "post": {
        "tags": [
          "feedbacks"
        ],
        "summary": "Salva as informações de feedback de um recrutador para uma candidata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto de feedback a ser salvo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          },
          {
            "$ref": "#/parameters/client_id"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "201": {
            "description": "Feedback criado"
          },
          "401": {
            "description": "Erro na validação do client_id"
          },
          "404": {
            "description": "Candidata não encontrada"
          },
          "412": {
            "description": "Um dos campos não foi preenchido corretamente"
          }
        }
      },
      "get": {
        "tags": [
          "feedbacks"
        ],
        "summary": "Retorna todos os feedbacks recebidos de uma candidata",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/client_id"
          },
          {
            "$ref": "#/parameters/_offset"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback foi retornado corretamente"
          },
          "401": {
            "description": "Erro na validação do client_id"
          },
          "404": {
            "description": "Candidata não encontrada"
          }
        }
      }
    }
  },
  "definitions": {
    "Candidata": {
      "type": "object",
      "required": [
        "nome",
        "nascimento",
        "atuacao",
        "experiencia",
        "link"
      ],
      "properties": {
        "nome": {
          "type": "string",
          "example": "Carlota Silva"
        },
        "nascimento": {
          "type": "string",
          "example": "05/05/1990"
        },
        "atuacao": {
          "type": "string",
          "description": "Atuação que a candidata exerce no momento do cadastro, podendo ser empregatícia ou não",
          "example": "Estudante"
        },
        "experiencia": {
          "type": "string",
          "description": "Descrição textual da experiência da candidata, citando com quais tecnologias ela lidou",
          "example": "Já desenvolvi em Ruby na universidade, e em NodeJS em projetos pessoais."
        },
        "link": {
          "type": "string",
          "description": "Endereço web da candidata, podendo ser Github, portifólio, website, etc",
          "example": "http://portifolioDaCa.github.io"
        }
      }
    },
    "CandidataRetorno": {
      "allOf": [
        {
          "type": "object"
        },
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "example": "123abc"
            }
          }
        },
        {
          "$ref": "#/definitions/Candidata"
        }
      ]
    },
    "Feedback": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Data na qual o feedback foi dado",
          "example": "09/10/2018"
        },
        "conteudo": {
          "type": "string",
          "description": "Conteúdo do feedback",
          "example": "Oi! Gostei do seu perfil, poderia me mandar um e-mail com seu CV para <recrutador@empresadaora.com>?"
        },
        "recrutadorId": {
          "type": "string",
          "description": "Identificador do Recrutador que fez o feedback"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Para mais detalhes da documentação desta e de demais APIs, veja o README.md",
    "url": "https://github.com/maiarar/tfgc-backend/blob/master/README.md"
  }
}